name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkitgtk-6.0-dev \
            javascriptcoregtk-4.1 \
            webkit2gtk-4.1 \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libgtk-4-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            pkg-config \
            libwebkit2gtk-4.0-37 \
            libwebkit2gtk-4.0-37-gtk3 \
            libwebkit2gtk-4.0-37-gtk4

      - name: Install dependencies (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          curl -L -o MicrosoftEdgeWebview2Setup.exe https://go.microsoft.com/fwlink/p/?LinkId=2124703
          ./MicrosoftEdgeWebview2Setup.exe /silent /install

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install frontend dependencies
        run: npm install

      - name: Build with Tauri
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform.os }}
          path: src-tauri/target/release/
          if-no-files-found: error

  create-release:
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/release-macos-latest/**/*
            artifacts/release-ubuntu-latest/**/*
            artifacts/release-windows-latest/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

