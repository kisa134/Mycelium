name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Rust (Ubuntu/macOS)
        if: matrix.platform != 'windows-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust (Windows)
        if: matrix.platform == 'windows-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          # Update Node.js to latest LTS
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            pkg-config \
            libappindicator3-dev \
            libdbus-1-dev \
            libx11-dev \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libxtst-dev \
            libnss3-dev \
            libcups2-dev \
            libasound2-dev \
            libpulse-dev \
            libdrm-dev \
            libxcomposite-dev \
            libxdamage-dev \
            libxfixes-dev \
            libxrandr-dev \
            libgbm-dev \
            libxss-dev \
            libatk-bridge2.0-dev \
            libatspi2.0-dev \
            libgdk-pixbuf2.0-dev \
            libglib2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libgirepository1.0-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libwebkit2gtk-4.1-dev \
            libwebkit2gtk-4.0-37 \
            libwebkit2gtk-4.0-37-gtk3 \
            libwebkit2gtk-4.0-37-gtk4
          sudo apt-get clean
          sudo apt-get autoremove -y
          # Set proper permissions
          sudo chmod -R 755 /usr/lib/x86_64-linux-gnu/
          sudo chmod -R 755 /usr/include/

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install jq
          xcode-select --install || true

      - name: Install dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install -y nodejs
          # Install WebView2
          curl -L -o MicrosoftEdgeWebview2Setup.exe https://go.microsoft.com/fwlink/p/?LinkId=2124703
          ./MicrosoftEdgeWebview2Setup.exe /silent /install

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install project dependencies
        run: npm install

      - name: Build with Tauri
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig
          LD_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu
          WEBKIT_DISABLE_COMPOSITING_MODE: 1
          WEBKIT_DISABLE_GPU_PROCESS: 1

      - name: Upload artifacts (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-ubuntu-latest
          path: src-tauri/target/release/
          if-no-files-found: error

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-latest
          path: src-tauri/target/release/
          if-no-files-found: error

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-windows-latest
          path: src-tauri/target/release/
          if-no-files-found: error

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/release-macos-latest/**/*
            artifacts/release-ubuntu-latest/**/*
            artifacts/release-windows-latest/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 